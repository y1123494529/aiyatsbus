name: Build aiyatsbus Plugin

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # 2. 设置Java环境
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. 安装Gradle（使用Gradle Wrapper避免下载问题）
      - name: Setup Gradle Wrapper
        run: |
          chmod +x gradlew
          ./gradlew --version

      # 4. 修复Kotlin JVM目标版本问题
      - name: Fix Kotlin JVM target version
        run: |
          # 设置Kotlin JVM目标版本为17
          find . -name '*.gradle.kts' -exec sed -i 's/jvmTarget = "1.8"/jvmTarget = "17"/g' {} +
          
          # 添加显式的工具链配置
          echo 'kotlin { jvmToolchain(17) }' >> build.gradle.kts
          echo 'tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> { kotlinOptions.jvmTarget = "17" }' >> build.gradle.kts

      # 5. 执行构建（使用Gradle Wrapper）
      - name: Build with Gradle
        run: |
          ./gradlew clean build --no-daemon \
            -Pkotlin.jvm.target=17 \
            -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=1g"

      # 6. 查找构建产物
      - name: Find build artifacts
        run: |
          echo "JAR files found:"
          find . -name '*.jar' -print
          echo "Build outputs:"
          find . -type d -name 'build' -print

      # 7. 存储构建产物（使用更灵活的路径）
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: aiyatsbus-plugin
          path: |
            **/build/libs/*.jar
            **/build/outputs/**/*
          if-no-files-found: warn
          retention-days: 7

      # 8. 创建发布
      - name: Create Release
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            **/build/libs/*.jar
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
